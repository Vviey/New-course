<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mission 2.5: Knowledge Test â€” Fiat vs Freedom</title>
  <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #FBF4D2;
      color: #333;
      margin: 0;
      padding: 0;
    }
    
    .container {
      max-width: 900px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .header {
      background-color: #EE720B;
      color: white;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    
    .content-box {
      background-color: white;
      border-radius: 8px;
      padding: 20px;
      margin-bottom: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .scenario {
      background-color: #FBF4D2;
      border-left: 5px solid #EE720B;
      padding: 20px;
      margin-bottom: 20px;
      border-radius: 0 8px 8px 0;
    }
    
    .scenario-title {
      color: #EE720B;
      margin-top: 0;
      font-size: 1.3em;
    }
    
    .quiz-question {
      margin-bottom: 30px;
    }
    
    .question-text {
      font-weight: bold;
      margin-bottom: 15px;
    }
    
    .options-container {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    
    .option {
      background-color: #f0f0f0;
      padding: 15px;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      border: 2px solid transparent;
    }
    
    .option:hover {
      background-color: #FFC567;
    }
    
    .option.selected {
      background-color: #FFC567;
      border-color: #EE720B;
    }
    
    .option.correct {
      background-color: #d4edda;
      border-color: #28a745;
    }
    
    .option.incorrect {
      background-color: #f8d7da;
      border-color: #dc3545;
    }
    
    .feedback {
      margin-top: 15px;
      padding: 15px;
      border-radius: 8px;
      display: none;
    }
    
    .feedback.visible {
      display: block;
    }
    
    .feedback.success {
      background-color: #d4edda;
      color: #155724;
    }
    
    .feedback.error {
      background-color: #f8d7da;
      color: #721c24;
    }
    
    .reflection-area {
      margin-top: 30px;
    }
    
    .reflection-textarea {
      width: 100%;
      min-height: 120px;
      border: 2px solid #FFC567;
      border-radius: 8px;
      padding: 15px;
      margin-top: 10px;
      font-family: inherit;
      resize: vertical;
    }
    
    .button {
      background-color: #EE720B;
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 8px;
      cursor: pointer;
      font-weight: bold;
      margin-top: 20px;
      font-size: 1rem;
    }
    
    .button:hover {
      background-color: #d66200;
    }
    
    .button:disabled {
      background-color: #ccc;
      cursor: not-allowed;
    }
    
    .progress-container {
      background-color: #f0f0f0;
      height: 8px;
      border-radius: 4px;
      margin-bottom: 30px;
      overflow: hidden;
    }
    
    .progress-bar {
      height: 100%;
      background-color: #EE720B;
      transition: width 0.3s ease;
    }
    
    .result-container {
      text-align: center;
      padding: 30px;
    }
    
    .score {
      font-size: 36px;
      font-weight: bold;
      color: #EE720B;
      margin-bottom: 20px;
    }
    
    .completion-message {
      font-size: 18px;
      margin-bottom: 20px;
    }
    
    .answers-review {
      text-align: left;
      margin-top: 30px;
    }
    
    .design-challenge {
      background-color: #FBF4D2;
      border-radius: 8px;
      padding: 20px;
      margin-top: 30px;
    }
    
    @media (max-width: 768px) {
      .container {
        padding: 15px;
      }
    }
  </style>
</head>
<body>
  <div id="root"></div>
  
  <script type="text/babel">
    const FiatVsFreedomQuiz = () => {
      const [currentQuestionIndex, setCurrentQuestionIndex] = React.useState(0);
      const [selectedOption, setSelectedOption] = React.useState(null);
      const [isAnswered, setIsAnswered] = React.useState(false);
      const [score, setScore] = React.useState(0);
      const [userReflections, setUserReflections] = React.useState({});
      const [quizCompleted, setQuizCompleted] = React.useState(false);
      
      const scenarios = [
        {
          id: 1,
          title: "Currency Crisis in Venezuela",
          description: "Venezuela experienced hyperinflation reaching 1,000,000% in 2018. Citizens found their savings becoming worthless within days.",
          question: "What aspect of fiat currency made this situation possible?",
          options: [
            { id: "a", text: "Government ability to print unlimited currency", isCorrect: true },
            { id: "b", text: "Digital payment systems becoming unavailable", isCorrect: false },
            { id: "c", text: "Foreign countries imposing trade restrictions", isCorrect: false },
            { id: "d", text: "Lack of gold reserves in the central bank", isCorrect: false }
          ],
          feedback: {
            correct: "Correct! Without constraints on money creation, the Venezuelan government printed currency to cover deficits, leading to hyperinflation.",
            incorrect: "Not quite. The fundamental issue was the government's unlimited ability to create new bolivars, which devalued the currency exponentially."
          },
          reflectionPrompt: "How would a fixed-supply currency like Bitcoin have changed this scenario for Venezuelan citizens?"
        },
        {
          id: 2,
          title: "Payment Censorship",
          description: "In 2010, major payment processors blocked donations to WikiLeaks, effectively cutting off their funding despite no formal legal charges.",
          question: "Which feature of Bitcoin would have prevented this form of financial censorship?",
          options: [
            { id: "a", text: "Its faster transaction speeds", isCorrect: false },
            { id: "b", text: "Its permissionless nature requiring no third-party approval", isCorrect: true },
            { id: "c", text: "Its high market capitalization", isCorrect: false },
            { id: "d", text: "Its volatile price movements", isCorrect: false }
          ],
          feedback: {
            correct: "Correct! Bitcoin's permissionless design means no central authority can block transactions between willing participants.",
            incorrect: "Not quite. The key feature is Bitcoin's permissionless design - transactions don't require approval from any third party."
          },
          reflectionPrompt: "What are the implications of permissionless payments for political freedom and censorship resistance?"
        },
        {
          id: 3,
          title: "Bank Account Freezes in Canada",
          description: "During the 2022 trucker protests in Canada, the government ordered banks to freeze accounts of protesters and donors without judicial process.",
          question: "Why were these account freezes possible with traditional banking but would be impossible with self-custodied Bitcoin?",
          options: [
            { id: "a", text: "Bitcoin transactions are completely anonymous", isCorrect: false },
            { id: "b", text: "Bitcoin's price volatility protects against freezes", isCorrect: false },
            { id: "c", text: "Self-custody means only the holder of private keys can control the funds", isCorrect: true },
            { id: "d", text: "Bitcoin is recognized as legal tender in more countries", isCorrect: false }
          ],
          feedback: {
            correct: "Correct! When you hold your own Bitcoin private keys, no bank or government can seize or freeze your funds without your cooperation.",
            incorrect: "Not quite. The key difference is that with self-custodied Bitcoin, only the person who holds the private keys can control the funds."
          },
          reflectionPrompt: "What responsibilities come with the financial sovereignty of self-custody? What are the trade-offs?"
        },
        {
          id: 4,
          title: "Savings Erosion Through Inflation",
          description: "Since 2000, the US dollar has lost over 40% of its purchasing power, affecting retirees and long-term savers significantly.",
          question: "Why does fiat currency consistently lose value over time?",
          options: [
            { id: "a", text: "Physical cash naturally degrades over time", isCorrect: false },
            { id: "b", text: "By design, central banks target positive inflation rates", isCorrect: true },
            { id: "c", text: "International currency speculation causes devaluation", isCorrect: false },
            { id: "d", text: "Digital payment systems add hidden fees that reduce value", isCorrect: false }
          ],
          feedback: {
            correct: "Correct! Central banks typically target inflation rates of 2-3% annually, deliberately eroding purchasing power to encourage spending and borrowing.",
            incorrect: "Not quite. Central banks deliberately target positive inflation (typically 2-3% annually) as monetary policy, ensuring fiat loses value by design."
          },
          reflectionPrompt: "How might a society's savings and investment patterns change if the currency's purchasing power remained stable or increased over time?"
        },
        {
          id: 5,
          title: "Financial Surveillance",
          description: "In many countries, all financial transactions above a certain threshold are automatically reported to government agencies, creating comprehensive surveillance of citizens' economic lives.",
          question: "Which characteristic of Bitcoin transactions provides greater financial privacy?",
          options: [
            { id: "a", text: "Transactions can be made without linking to personal identity", isCorrect: true },
            { id: "b", text: "Transactions can be reversed if privacy is compromised", isCorrect: false },
            { id: "c", text: "Transactions can only be seen by financial institutions", isCorrect: false },
            { id: "d", text: "Transactions automatically hide the amounts being transferred", isCorrect: false }
          ],
          feedback: {
            correct: "Correct! While Bitcoin transactions are public on the blockchain, they don't inherently require identity verification, allowing for greater privacy when used carefully.",
            incorrect: "Not quite. Bitcoin provides privacy because transactions don't inherently require personal identification, though the amounts and addresses are public on the blockchain."
          },
          reflectionPrompt: "How important is financial privacy in a democratic society? Should all transactions be visible to authorities?"
        }
      ];
      
      const designChallenge = {
        title: "Design Challenge: Creating Censorship-Resistant Money",
        description: "Based on what you've learned about the vulnerabilities of fiat currency and the features of Bitcoin, design a monetary system that maximizes freedom and minimizes potential for weaponization.",
        prompt: "Describe your ideal monetary system, considering: control, privacy, accessibility, stability, and protection against censorship."
      };
      
      const handleOptionSelect = (optionId) => {
        if (isAnswered) return;
        
        setSelectedOption(optionId);
      };
      
      const checkAnswer = () => {
        if (!selectedOption) return;
        
        const currentQuestion = scenarios[currentQuestionIndex];
        const selectedOptionObj = currentQuestion.options.find(opt => opt.id === selectedOption);
        
        if (selectedOptionObj.isCorrect) {
          setScore(score + 1);
        }
        
        setIsAnswered(true);
      };
      
      const handleReflectionChange = (e) => {
        setUserReflections({
          ...userReflections,
          [currentQuestionIndex]: e.target.value
        });
      };
      
      const moveToNextQuestion = () => {
        if (currentQuestionIndex < scenarios.length - 1) {
          setCurrentQuestionIndex(currentQuestionIndex + 1);
          setSelectedOption(null);
          setIsAnswered(false);
        } else {
          setQuizCompleted(true);
        }
      };
      
      const currentScenario = scenarios[currentQuestionIndex];
      const progress = ((currentQuestionIndex) / scenarios.length) * 100;
      
      const renderQuiz = () => (
        <>
          <div className="progress-container">
            <div className="progress-bar" style={{ width: `${progress}%` }}></div>
          </div>
          
          <div className="scenario">
            <h3 className="scenario-title">{currentScenario.title}</h3>
            <p>{currentScenario.description}</p>
          </div>
          
          <div className="quiz-question">
            <div className="question-text">{currentScenario.question}</div>
            
            <div className="options-container">
              {currentScenario.options.map(option => (
                <div 
                  key={option.id}
                  className={`option ${selectedOption === option.id ? 'selected' : ''} 
                             ${isAnswered && option.isCorrect ? 'correct' : ''} 
                             ${isAnswered && selectedOption === option.id && !option.isCorrect ? 'incorrect' : ''}`}
                  onClick={() => handleOptionSelect(option.id)}
                >
                  {option.text}
                </div>
              ))}
            </div>
            
            <div 
              className={`feedback ${isAnswered ? 'visible' : ''} 
                        ${isAnswered && currentScenario.options.find(opt => opt.id === selectedOption)?.isCorrect 
                          ? 'success' 
                          : 'error'}`}
            >
              {isAnswered ? (
                currentScenario.options.find(opt => opt.id === selectedOption)?.isCorrect 
                  ? currentScenario.feedback.correct 
                  : currentScenario.feedback.incorrect
              ) : ''}
            </div>
            
            {!isAnswered ? (
              <button 
                className="button" 
                onClick={checkAnswer}
                disabled={!selectedOption}
              >
                Check Answer
              </button>
            ) : (
              <div className="reflection-area">
                <h4>Reflection:</h4>
                <p>{currentScenario.reflectionPrompt}</p>
                <textarea 
                  className="reflection-textarea"
                  placeholder="Share your thoughts here..."
                  value={userReflections[currentQuestionIndex] || ''}
                  onChange={handleReflectionChange}
                ></textarea>
                
                <button 
                  className="button" 
                  onClick={moveToNextQuestion}
                >
                  {currentQuestionIndex < scenarios.length - 1 ? 'Next Question' : 'Complete Quiz'}
                </button>
              </div>
            )}
          </div>
        </>
      );
      
      const renderResults = () => (
        <div className="result-container">
          <h2>Quiz Completed!</h2>
          <div className="score">{score} / {scenarios.length}</div>
          <div className="completion-message">
            {score === scenarios.length 
              ? "Perfect score! You have a strong understanding of the differences between fiat currency and Bitcoin."
              : score >= Math.floor(scenarios.length / 2)
                ? "Good job! You understand many of the key concepts about fiat currencies and alternatives."
                : "You're building your knowledge. Consider reviewing the concepts about monetary systems again."
            }
          </div>
          
          <div className="design-challenge">
            <h3>{designChallenge.title}</h3>
            <p>{designChallenge.description}</p>
            <p><strong>{designChallenge.prompt}</strong></p>
            <textarea 
              className="reflection-textarea"
              placeholder="Design your ideal monetary system here..."
            ></textarea>
            <button className="button">
              Submit Design
            </button>
          </div>
          
          <div className="answers-review">
            <h3>Your Reflections:</h3>
            {scenarios.map((scenario, index) => (
              <div key={index} className="content-box" style={{ marginBottom: '15px' }}>
                <h4>{scenario.title}</h4>
                <p><strong>Reflection prompt:</strong> {scenario.reflectionPrompt}</p>
                <p><strong>Your thoughts:</strong> {userReflections[index] || "No reflection provided."}</p>
              </div>
            ))}
          </div>
        </div>
      );
      
      return (
        <div className="container">
          <div className="header">
            <h1>Mission 2.5: Knowledge Test â€” Fiat vs Freedom</h1>
            <p>Test your understanding of the risks of fiat currency systems and how alternatives like Bitcoin address them</p>
          </div>
          
          <div className="content-box">
            {!quizCompleted ? renderQuiz() : renderResults()}
          </div>
        </div>
      );
    };
    
    ReactDOM.render(<FiatVsFreedomQuiz />, document.getElementById('root'));
  </script>
</body>
</html>