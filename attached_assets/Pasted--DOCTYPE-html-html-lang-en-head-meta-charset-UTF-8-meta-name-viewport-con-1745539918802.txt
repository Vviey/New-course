<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Time Machine Inflation Simulator</title>
    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #FBF4D2;
            margin: 0;
            padding: 20px;
            color: #333;
        }
        
        .container {
            max-width: 900px;
            margin: 0 auto;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            overflow: hidden;
        }
        
        h1, h2, h3 {
            color: #EE720B;
        }
        
        .lesson-container {
            margin-bottom: 20px;
            padding: 15px;
            background-color: rgba(255, 197, 103, 0.1);
            border-radius: 8px;
        }
        
        .simulation-container {
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }
        
        .time-machine {
            background-color: #f9f9f9;
            border-radius: 8px;
            padding: 20px;
            margin-top: 20px;
            position: relative;
        }
        
        .time-selector {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
        }
        
        .timeline {
            position: relative;
            width: 80%;
            height: 4px;
            background-color: #ddd;
            margin: 20px auto;
        }
        
        .timeline-marker {
            position: absolute;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: #EE720B;
            top: -8px;
            transform: translateX(-50%);
            cursor: pointer;
            transition: transform 0.2s;
        }
        
        .timeline-marker:hover {
            transform: translateX(-50%) scale(1.2);
        }
        
        .timeline-year {
            position: absolute;
            bottom: -25px;
            transform: translateX(-50%);
            font-size: 12px;
        }
        
        .item-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
            margin-top: 40px;
        }
        
        .item-card {
            position: relative;
            width: 200px;
            padding: 15px;
            border-radius: 8px;
            background-color: white;
            box-shadow: 0 2px 6px rgba(0,0,0,0.1);
            text-align: center;
            cursor: pointer;
            transition: transform 0.3s, opacity 0.3s;
            overflow: hidden;
        }
        
        .item-card:hover {
            transform: translateY(-5px);
        }
        
        .item-card img {
            width: 80px;
            height: 80px;
            object-fit: contain;
            margin: 0 auto 10px;
            display: block;
        }
        
        .item-price {
            margin-top: 10px;
            font-weight: bold;
            font-size: 1.2em;
            color: #EE720B;
        }
        
        .item-comparison {
            margin-top: 15px;
            font-size: 0.9em;
            color: #666;
            min-height: 40px;
        }
        
        .coin-container {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            position: relative;
            height: 100px;
        }
        
        .coin {
            width: 80px;
            height: 80px;
            background-color: #FFC567;
            border-radius: 50%;
            position: absolute;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: #333;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        
        .dissolving {
            animation: dissolve 3s forwards;
        }
        
        @keyframes dissolve {
            0% {
                opacity: 1;
                transform: scale(1);
            }
            50% {
                opacity: 0.5;
                transform: scale(0.8);
            }
            100% {
                opacity: 0.2;
                transform: scale(0.5);
            }
        }
        
        .historical-context {
            margin-top: 40px;
            padding: 15px;
            border-left: 4px solid #EE720B;
            background-color: rgba(238, 114, 11, 0.05);
        }
        
        .year-display {
            font-size: 2.5em;
            font-weight: bold;
            text-align: center;
            margin: 20px 0;
            color: #EE720B;
        }
        
        button {
            background-color: #EE720B;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
            transition: background-color 0.2s;
        }
        
        button:hover {
            background-color: #d5650a;
        }
        
        .info-panel {
            margin-top: 30px;
            padding: 15px;
            background-color: #f5f5f5;
            border-radius: 8px;
        }
        
        .value-change {
            font-size: 1.2em;
            text-align: center;
            margin: 20px 0;
        }
        
        .loss-percentage {
            font-weight: bold;
            color: #d32f2f;
        }
        
        @media (max-width: 768px) {
            .item-container {
                flex-direction: column;
                align-items: center;
            }
            
            .item-card {
                width: 80%;
            }
            
            .timeline {
                width: 95%;
            }
        }
    </style>
</head>
<body>
    <div id="root"></div>

    <script type="text/babel">
        const TimeMachineSimulator = () => {
            const [selectedYear, setSelectedYear] = React.useState(1960);
            const [dissolveCoins, setDissolveCoins] = React.useState(false);
            const [showHistoricalContext, setShowHistoricalContext] = React.useState(false);
            
            const years = [1960, 1970, 1980, 1990, 2000, 2010, 2020, 2025];
            
            const items = [
                {
                    id: 1,
                    name: "Loaf of Bread",
                    image: "data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'%3E%3Cpath fill='%23d9c9ba' d='M55 22c0-10-11-18-23-18S9 12 9 22v30h46V22z'/%3E%3Cpath fill='%23b89f8d' d='M55 22v30h-2V22c0-9.3-9.6-16.9-21-17.9.7 0 1.3-.1 2-.1 12 0 21 8 21 18z'/%3E%3Cpath fill='%23efdece' d='M52 22c0-7.7-9.8-14-22-14S8 14.3 8 22v3h44v-3z'/%3E%3C/svg%3E",
                    prices: {
                        1960: 0.22,
                        1970: 0.25,
                        1980: 0.50,
                        1990: 0.70,
                        2000: 1.72,
                        2010: 2.48,
                        2020: 3.53,
                        2025: 4.19
                    }
                },
                {
                    id: 2,
                    name: "Gallon of Milk",
                    image: "data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'%3E%3Cpath fill='%23f0f0f0' d='M40 12H24l-6 10v30c0 2.2 1.8 4 4 4h20c2.2 0 4-1.8 4-4V22l-6-10z'/%3E%3Cpath fill='%23d1d1d1' d='M40 12h-4l6 10v30c0 2.2-1.8 4-4 4h4c2.2 0 4-1.8 4-4V22l-6-10z'/%3E%3Cpath fill='%23f0f0f0' d='M42 8H22c-1.1 0-2 .9-2 2v2h24v-2c0-1.1-.9-2-2-2z'/%3E%3C/svg%3E",
                    prices: {
                        1960: 0.49,
                        1970: 1.15,
                        1980: 2.16,
                        1990: 2.78,
                        2000: 2.79,
                        2010: 3.39,
                        2020: 3.68,
                        2025: 4.49
                    }
                },
                {
                    id: 3,
                    name: "Movie Ticket",
                    image: "data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'%3E%3Cpath fill='%23ffeb3b' d='M60 20H4c-1.1 0-2 .9-2 2v28c0 1.1.9 2 2 2h56c1.1 0 2-.9 2-2V22c0-1.1-.9-2-2-2z'/%3E%3Cpath fill='%23fdd835' d='M4 20h4v32H4c-1.1 0-2-.9-2-2V22c0-1.1.9-2 2-2zM56 20h4c1.1 0 2 .9 2 2v28c0 1.1-.9 2-2 2h-4V20z'/%3E%3Cpath fill='%23fff' d='M13 28h38v16H13z'/%3E%3C/svg%3E",
                    prices: {
                        1960: 0.69,
                        1970: 1.55,
                        1980: 2.69,
                        1990: 4.25,
                        2000: 5.39,
                        2010: 7.89,
                        2020: 9.16,
                        2025: 11.75
                    }
                }
            ];

            const historicalContext = {
                1960: "The U.S. dollar was still backed by gold. The federal minimum wage was $1.00/hour. Most Americans could buy a house for less than 2x annual salary.",
                1970: "The Bretton Woods system was beginning to falter. Inflation concerns were growing as the U.S. printed money to fund the Vietnam War.",
                1980: "After the 1971 Nixon Shock (removal of gold standard), the U.S. experienced severe stagflation. Inflation peaked at 14.8% in March 1980.",
                1990: "The savings and loan crisis was underway. The Federal Reserve began more aggressive monetary policy to control inflation.",
                2000: "The dot-com bubble peaked. The Federal Reserve had kept interest rates low, encouraging technology speculation.",
                2010: "Following the 2008 financial crisis, the Federal Reserve implemented unprecedented quantitative easing (money printing).",
                2020: "The COVID-19 pandemic led to massive money creation. About 40% of all US dollars in existence were printed during 2020-2021.",
                2025: "Inflation continues to erode purchasing power despite central bank interventions."
            };
            
            const handleYearChange = (year) => {
                setSelectedYear(year);
                setDissolveCoins(true);
                setShowHistoricalContext(true);
                
                // Reset dissolve animation after a delay
                setTimeout(() => {
                    setDissolveCoins(false);
                }, 3500);
            };
            
            const calculateInflationRate = (startYear, endYear, price) => {
                const startPrice = price[startYear];
                const endPrice = price[endYear];
                const years = endYear - startYear;
                
                // Compound annual growth rate formula
                const inflationRate = ((endPrice / startPrice) ** (1 / years) - 1) * 100;
                return inflationRate.toFixed(1);
            };
            
            const calculatePurchasingPowerLoss = (startYear, endYear, price) => {
                const startPrice = price[startYear];
                const endPrice = price[endYear];
                
                const lossPercentage = ((endPrice - startPrice) / endPrice) * 100;
                return lossPercentage.toFixed(1);
            };
            
            // Generate positions for coins
            const generateCoinPositions = () => {
                const positions = [];
                const numberOfCoins = 10;
                
                for (let i = 0; i < numberOfCoins; i++) {
                    positions.push({
                        left: `${10 + (i * 7)}%`,
                        top: `${Math.random() * 60}%`,
                        delay: `${Math.random() * 0.5}s`
                    });
                }
                
                return positions;
            };
            
            const coinPositions = generateCoinPositions();
            
            return (
                <div className="container">
                    <h1>Mission 2.2: The Silent Tax — Inflation</h1>
                    
                    <div className="lesson-container">
                        <h2>Learning Objectives</h2>
                        <ul>
                            <li>Understand how inflation erodes purchasing power over time</li>
                            <li>Visualize the historical impact of inflation on everyday items</li>
                            <li>Connect monetary policy changes to inflation outcomes</li>
                            <li>Recognize how inflation acts as a form of taxation without legislation</li>
                        </ul>
                    </div>
                    
                    <div className="simulation-container">
                        <h2>Time Machine Inflation Simulator</h2>
                        <p>Travel through time to see how prices have changed and how the value of money has dissolved due to inflation. Select a year on the timeline to see historical prices.</p>
                        
                        <div className="time-machine">
                            <div className="year-display">{selectedYear}</div>
                            
                            <div className="timeline">
                                {years.map((year, index) => (
                                    <div key={year}>
                                        <div 
                                            className="timeline-marker" 
                                            style={{left: `${index * (100 / (years.length - 1))}%`}}
                                            onClick={() => handleYearChange(year)}
                                        ></div>
                                        <div 
                                            className="timeline-year" 
                                            style={{left: `${index * (100 / (years.length - 1))}%`}}
                                        >
                                            {year}
                                        </div>
                                    </div>
                                ))}
                            </div>
                            
                            <div className="item-container">
                                {items.map(item => (
                                    <div className="item-card" key={item.id}>
                                        <img src={item.image} alt={item.name} />
                                        <h3>{item.name}</h3>
                                        <div className="item-price">${item.prices[selectedYear].toFixed(2)}</div>
                                        <div className="item-comparison">
                                            {selectedYear > years[0] && (
                                                <>
                                                    In 1960: ${item.prices[1960].toFixed(2)}
                                                    <br/>
                                                    <span className="loss-percentage">
                                                        {calculatePurchasingPowerLoss(1960, selectedYear, item.prices)}% purchasing power loss
                                                    </span>
                                                </>
                                            )}
                                        </div>
                                    </div>
                                ))}
                            </div>
                            
                            <div className="coin-container">
                                {coinPositions.map((pos, index) => (
                                    <div 
                                        key={index}
                                        className={`coin ${dissolveCoins ? 'dissolving' : ''}`}
                                        style={{
                                            left: pos.left,
                                            top: pos.top,
                                            animationDelay: pos.delay
                                        }}
                                    >
                                        $1
                                    </div>
                                ))}
                            </div>
                            
                            {showHistoricalContext && (
                                <div className="historical-context">
                                    <h3>Historical Context: {selectedYear}</h3>
                                    <p>{historicalContext[selectedYear]}</p>
                                </div>
                            )}
                            
                            <div className="info-panel">
                                <h3>Dollar Value Erosion</h3>
                                {selectedYear > years[0] && (
                                    <div className="value-change">
                                        A dollar in 1960 would be worth ${(1 / (items[0].prices[selectedYear] / items[0].prices[1960])).toFixed(2)} in today's purchasing power.
                                        <br/><br/>
                                        Average annual inflation rate (1960-{selectedYear}): 
                                        <span className="loss-percentage"> 
                                            {calculateInflationRate(1960, selectedYear, items[0].prices)}%
                                        </span>
                                    </div>
                                )}
                            </div>
                        </div>
                    </div>
                    
                    <div className="lesson-container">
                        <h2>Key Insights</h2>
                        <p>Inflation is often called a "silent tax" because it erodes the value of money over time without requiring any legislation. When central banks create more currency, it typically reduces the purchasing power of all existing money.</p>
                        <p>Notice how inflation accelerated after 1971 when the U.S. removed the gold standard, allowing unlimited money printing. During periods of significant money creation (like the 2008 financial crisis and 2020 pandemic responses), inflation has increased dramatically.</p>
                        <p>Those on fixed incomes or with savings in cash are hit hardest by inflation, while those with assets like real estate or stocks can often keep pace with or exceed inflation rates.</p>
                        <p>Bitcoin, with its fixed supply of 21 million coins, was designed as a response to this inflationary monetary policy, offering an alternative that cannot be devalued through money printing.</p>
                    </div>
                </div>
            );
        };
        
        ReactDOM.render(<TimeMachineSimulator />, document.getElementById('root'));
    </script>
</body>
</html>