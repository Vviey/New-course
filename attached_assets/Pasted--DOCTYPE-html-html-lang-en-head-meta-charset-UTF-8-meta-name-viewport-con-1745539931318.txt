<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Privacy Simulator</title>
    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #FBF4D2;
            margin: 0;
            padding: 20px;
            color: #333;
        }
        
        .container {
            max-width: 900px;
            margin: 0 auto;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            overflow: hidden;
        }
        
        h1, h2, h3 {
            color: #EE720B;
        }
        
        .lesson-container {
            margin-bottom: 20px;
            padding: 15px;
            background-color: rgba(255, 197, 103, 0.1);
            border-radius: 8px;
        }
        
        .simulation-container {
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }
        
        .payment-options {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 30px;
            justify-content: center;
        }
        
        .payment-option {
            width: 220px;
            padding: 20px;
            border-radius: 8px;
            background-color: #f9f9f9;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .payment-option:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }
        
        .payment-option.selected {
            border: 2px solid #EE720B;
            background-color: rgba(238, 114, 11, 0.05);
        }
        
        .payment-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            background-color: #FFC567;
        }
        
        .payment-icon svg {
            width: 40px;
            height: 40px;
        }
        
        .privacy-heatmap {
            margin-top: 40px;
            padding: 20px;
            background-color: #f5f5f5;
            border-radius: 8px;
            opacity: 0;
            transition: opacity 0.5s;
            height: 0;
            overflow: hidden;
        }
        
        .privacy-heatmap.visible {
            opacity: 1;
            height: auto;
        }
        
        .data-points {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .data-point {
            padding: 10px;
            border-radius: 5px;
            text-align: center;
            color: white;
            font-weight: bold;
            transition: transform 0.3s;
        }
        
        .data-point:hover {
            transform: scale(1.05);
        }
        
        .risk-level-1 { background-color: #4CAF50; } /* Low risk */
        .risk-level-2 { background-color: #8BC34A; }
        .risk-level-3 { background-color: #CDDC39; color: #333; }
        .risk-level-4 { background-color: #FFEB3B; color: #333; }
        .risk-level-5 { background-color: #FFC107; color: #333; }
        .risk-level-6 { background-color: #FF9800; }
        .risk-level-7 { background-color: #FF5722; }
        .risk-level-8 { background-color: #F44336; }
        .risk-level-9 { background-color: #E91E63; }
        .risk-level-10 { background-color: #9C27B0; } /* High risk */
        
        .data-flow {
            margin-top: 40px;
        }
        
        .flow-diagram {
            width: 100%;
            height: 300px;
            position: relative;
            margin-top: 20px;
        }
        
        .flow-entity {
            position: absolute;
            width: 100px;
            height: 100px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        
        .flow-line {
            position: absolute;
            height: 2px;
            background-color: #333;
            transform-origin: left center;
        }
        
        .flow-line.data-line {
            background-color: #E91E63;
            height: 3px;
        }
        
        .flow-arrow {
            position: absolute;
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 6px 0 6px 10px;
            border-color: transparent transparent transparent #333;
        }
        
        .flow-arrow.data-arrow {
            border-color: transparent transparent transparent #E91E63;
        }
        
        .case-studies {
            margin-top: 40px;
            padding: 15px;
            border-left: 4px solid #EE720B;
            background-color: rgba(238, 114, 11, 0.05);
        }
        
        .case-study {
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }
        
        .case-study:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }
        
        .privacy-score {
            display: flex;
            align-items: center;
            margin-top: 20px;
        }
        
        .score-label {
            width: 120px;
            font-weight: bold;
        }
        
        .score-bar {
            flex-grow: 1;
            height: 20px;
            background-color: #eee;
            border-radius: 10px;
            overflow: hidden;
            position: relative;
        }
        
        .score-fill {
            height: 100%;
            border-radius: 10px;
            transition: width 1s ease-out;
        }
        
        .score-text {
            margin-left: 10px;
            font-weight: bold;
        }
        
        button {
            background-color: #EE720B;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
            transition: background-color 0.2s;
        }
        
        button:hover {
            background-color: #d5650a;
        }
        
        button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        
        @media (max-width: 768px) {
            .payment-options {
                flex-direction: column;
                align-items: center;
            }
            
            .payment-option {
                width: 90%;
            }
            
            .data-points {
                grid-template-columns: 1fr 1fr;
            }
        }
    </style>
</head>
<body>
    <div id="root"></div>

    <script type="text/babel">
        const PaymentPrivacySimulator = () => {
            const [selectedPayment, setSelectedPayment] = React.useState(null);
            const [showHeatmap, setShowHeatmap] = React.useState(false);
            
            const paymentOptions = [
                {
                    id: "bank",
                    name: "Bank Transfer",
                    icon: (
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12 2L2 9H22L12 2Z" fill="#333"/>
                            <path d="M4 10V20H20V10H4Z" fill="#333"/>
                            <path d="M2 22H22V20H2V22Z" fill="#333"/>
                            <path d="M7 12h2v6H7zM11 12h2v6h-2zM15 12h2v6h-2z" fill="white"/>
                        </svg>
                    ),
                    description: "Traditional banking system with interbank transfers",
                    dataPoints: [
                        { name: "Full Name", risk: 9 },
                        { name: "Home Address", risk: 10 },
                        { name: "Date of Birth", risk: 8 },
                        { name: "Payment Amount", risk: 9 },
                        { name: "Payment Timing", risk: 10 },
                        { name: "Recipient Details", risk: 9 },
                        { name: "Transaction History", risk: 10 },
                        { name: "IP Address", risk: 7 },
                        { name: "Device Info", risk: 8 }
                    ],
                    caseStudies: [
                        {
                            title: "Political Donations Frozen",
                            description: "In 2022, Canadian banks froze accounts of protesters and donors supporting the Freedom Convoy protests, without requiring court orders."
                        },
                        {
                            title: "Transaction Surveillance",
                            description: "Banks are required to report 'suspicious' transactions to government agencies, often with thresholds as low as $3,000, creating massive surveillance databases."
                        }
                    ],
                    flowEntities: [
                        { name: "You", x: 50, y: 50, color: "#4CAF50" },
                        { name: "Your Bank", x: 200, y: 50, color: "#2196F3" },
                        { name: "SWIFT/ACH Network", x: 350, y: 50, color: "#9C27B0" },
                        { name: "Recipient Bank", x: 500, y: 50, color: "#2196F3" },
                        { name: "Recipient", x: 650, y: 50, color: "#4CAF50" },
                        { name: "Government", x: 350, y: 150, color: "#F44336" },
                        { name: "Data Brokers", x: 200, y: 150, color: "#FF9800" },
                        { name: "Advertisers", x: 500, y: 150, color: "#FF9800" }
                    ],
                    flows: [
                        { from: 0, to: 1, isData: false },
                        { from: 1, to: 2, isData: false },
                        { from: 2, to: 3, isData: false },
                        { from: 3, to: 4, isData: false },
                        { from: 1, to: 5, isData: true },
                        { from: 3, to: 5, isData: true },
                        { from: 1, to: 6, isData: true },
                        { from: 6, to: 7, isData: true }
                    ],
                    privacyScore: 15
                },
                {
                    id: "mobile",
                    name: "Mobile Money",
                    icon: (
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect x="5" y="2" width="14" height="20" rx="2" fill="#333"/>
                            <path d="M9 18h6" stroke="white" strokeWidth="2"/>
                            <circle cx="12" cy="9" r="3" fill="#FFC567"/>
                            <path d="M15 9c0 1.7-1.3 3-3 3s-3-1.3-3-3 1.3-3 3-3 3 1.3 3 3z" stroke="white"/>
                        </svg>
                    ),
                    description: "Mobile wallet and payment apps like M-Pesa, Venmo, or Cash App",
                    dataPoints: [
                        { name: "Full Name", risk: 9 },
                        { name: "Phone Number", risk: 10 },
                        { name: "Email Address", risk: 9 },
                        { name: "Location Data", risk: 10 },
                        { name: "Payment Amount", risk: 8 },
                        { name: "Payment Timing", risk: 9 },
                        { name: "Social Connections", risk: 10 },
                        { name: "Transaction History", risk: 9 },
                        { name: "Spending Patterns", risk: 10 }
                    ],
                    caseStudies: [
                        {
                            title: "M-Pesa Surveillance in Kenya",
                            description: "The Kenyan government gained access to M-Pesa transaction data to track and monitor citizens' financial activities without warrants."
                        },
                        {
                            title: "Social Graph Exposure",
                            description: "Venmo's public-by-default transaction feed allowed researchers to map users' social networks and identify sensitive relationships and activities."
                        }
                    ],
                    flowEntities: [
                        { name: "You", x: 50, y: 50, color: "#4CAF50" },
                        { name: "Mobile App", x: 200, y: 50, color: "#FFC567" },
                        { name: "App Company Servers", x: 350, y: 50, color: "#FF5722" },
                        { name: "Partner Bank", x: 500, y: 50, color: "#2196F3" },
                        { name: "Recipient", x: 650, y: 50, color: "#4CAF50" },
                        { name: "Govt Surveillance", x: 350, y: 150, color: "#F44336" },
                        { name: "Data Analytics", x: 200, y: 150, color: "#FF9800" },
                        { name: "Advertisers", x: 500, y: 150, color: "#FF9800" }
                    ],
                    flows: [
                        { from: 0, to: 1, isData: false },
                        { from: 1, to: 2, isData: false },
                        { from: 2, to: 3, isData: false },
                        { from: 2, to: 4, isData: false },
                        { from: 2, to: 5, isData: true },
                        { from: 2, to: 6, isData: true },
                        { from: 6, to: 7, isData: true },
                        { from: 1, to: 6, isData: true }
                    ],
                    privacyScore: 20
                },
                {
                    id: "bitcoin",
                    name: "Bitcoin",
                    icon: (
                        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <circle cx="12" cy="12" r="10" fill="#FFC567"/>
                            <path d="M15.5 9.5c-.5-2-2.5-2.5-4.5-2l.5-2h-1l-.5 2h-1l.5-2h-1l-.5 2H7v1h1c.3 0 .5.2.5.5V14c0 .3-.2.5-.5.5H7v1h1.5l-.5 2h1l.5-2h1l-.5 2h1l.5-2c2 0 3.5-1 4-3 .5-1.5 0-2.5-1-3 .5-.5 1-1 1-2zM11 8.5h2c1 0 1.5.5 1 1.5-.5.5-1 1-2 1h-1.5l.5-2.5zm2.5 5.5c-.5.5-1 1-2 1H10l.5-2.5H12c1.5 0 2 .5 1.5 1.5z" fill="white"/>
                        </svg>
                    ),
                    description: "Peer-to-peer digital currency using blockchain technology",
                    dataPoints: [
                        { name: "Full Name", risk: 1 },
                        { name: "Home Address", risk: 1 },
                        { name: "Wallet Address", risk: 6 },
                        { name: "Payment Amount", risk: 8 },
                        { name: "Payment Timing", risk: 8 },
                        { name: "Transaction History", risk: 8 },
                        { name: "IP Address", risk: 4 },
                        { name: "KYC Exchange Data", risk: 8 },
                        { name: "Physical Location", risk: 2 }
                    ],
                    caseStudies: [
                        {
                            title: "Self-Custody Empowerment",
                            description: "During capital controls in Argentina, citizens used Bitcoin to preserve savings from 50%+ annual inflation and government seizures."
                        },
                        {
                            title: "Lightning Network Privacy",
                            description: "Bitcoin's Lightning Network allows for near-instant, low-fee payments with significantly enhanced privacy compared to on-chain transactions."
                        }
                    ],
                    flowEntities: [
                        { name: "You", x: 50, y: 50, color: "#4CAF50" },
                        { name: "Your Wallet", x: 200, y: 50, color: "#FFC567" },
                        { name: "Bitcoin Network", x: 350, y: 50, color: "#FF5722" },
                        { name: "Recipient Wallet", x: 500, y: 50, color: "#FFC567" },
                        { name: "Recipient", x: 650, y: 50, color: "#4CAF50" },
                        { name: "Blockchain Explorers", x: 350, y: 150, color: "#2196F3" },
                        { name: "Full Nodes", x: 350, y: 200, color: "#9C27B0" }
                    ],
                    flows: [
                        { from: 0, to: 1, isData: false },
                        { from: 1, to: 2, isData: false },
                        { from: 2, to: 3, isData: false },
                        { from: 3, to: 4, isData: false },
                        { from: 2, to: 5, isData: true },
                        { from: 2, to: 6, isData: true }
                    ],
                    privacyScore: 70
                }
            ];
            
            const handlePaymentSelect = (id) => {
                setSelectedPayment(id);
                setShowHeatmap(false);
            };
            
            const analyzePrivacy = () => {
                setShowHeatmap(true);
            };
            
            const selectedPaymentOption = selectedPayment 
                ? paymentOptions.find(option => option.id === selectedPayment) 
                : null;
                
            // Calculate coordinates for flow lines and arrows
            const calculateLineProperties = (fromEntity, toEntity) => {
                const startX = fromEntity.x + 50; // Half width of entity
                const startY = fromEntity.y + 50;
                const endX = toEntity.x + 50;
                const endY = toEntity.y + 50;
                
                // Calculate angle and length
                const angle = Math.atan2(endY - startY, endX - startX) * 180 / Math.PI;
                const length = Math.sqrt(Math.pow(endX - startX, 2) + Math.pow(endY - startY, 2)) - 100; // Subtract entity diameter
                
                // Calculate arrow position
                const arrowX = startX + (length * Math.cos(angle * Math.PI / 180));
                const arrowY = startY + (length * Math.sin(angle * Math.PI / 180));
                
                return {
                    startX, 
                    startY, 
                    angle, 
                    length,
                    arrowX,
                    arrowY
                };
            };
                
            return (
                <div className="container">
                    <h1>Mission 2.3: Surveillance & Censorship</h1>
                    
                    <div className="lesson-container">
                        <h2>Learning Objectives</h2>
                        <ul>
                            <li>Understand how different payment systems expose personal and financial data</li>
                            <li>Visualize the flow of payment information across financial networks</li>
                            <li>Recognize how surveillance capabilities are built into traditional financial systems</li>
                            <li>Compare privacy levels across different payment options</li>
                        </ul>
                    </div>
                    
                    <div className="simulation-container">
                        <h2>Payment Privacy Simulator</h2>
                        <p>Compare different payment methods to see exactly what data you reveal with each transaction. Each option has different privacy implications and surveillance risks.</p>
                        
                        <div className="payment-options">
                            {paymentOptions.map(option => (
                                <div 
                                    key={option.id} 
                                    className={`payment-option ${selectedPayment === option.id ? 'selected' : ''}`}
                                    onClick={() => handlePaymentSelect(option.id)}
                                >
                                    <div className="payment-icon">
                                        {option.icon}
                                    </div>
                                    <h3>{option.name}</h3>
                                    <p>{option.description}</p>
                                </div>
                            ))}
                        </div>
                        
                        {selectedPayment && (
                            <button onClick={analyzePrivacy}>
                                Analyze Privacy Implications
                            </button>
                        )}
                        
                        {selectedPaymentOption && (
                            <div className={`privacy-heatmap ${showHeatmap ? 'visible' : ''}`}>
                                <h3>Data Leakage Heatmap: {selectedPaymentOption.name}</h3>
                                
                                <div className="privacy-score">
                                    <div className="score-label">Privacy Score:</div>
                                    <div className="score-bar">
                                        <div 
                                            className="score-fill"
                                            style={{
                                                width: `${selectedPaymentOption.privacyScore}%`,
                                                backgroundColor: selectedPaymentOption.privacyScore > 65 
                                                    ? '#4CAF50' 
                                                    : selectedPaymentOption.privacyScore > 30 
                                                        ? '#FFC107' 
                                                        : '#F44336'
                                            }}
                                        ></div>
                                    </div>
                                    <div className="score-text">{selectedPaymentOption.privacyScore}/100</div>
                                </div>
                                
                                <h4>Data Points Exposed</h4>
                                <div className="data-points">
                                    {selectedPaymentOption.dataPoints.map((point, index) => (
                                        <div 
                                            key={index} 
                                            className={`data-point risk-level-${point.risk}`}
                                        >
                                            {point.name}
                                        </div>
                                    ))}
                                </div>
                                
                                <div className="data-flow">
                                    <h4>Information Flow Diagram</h4>
                                    <div className="flow-diagram">
                                        {selectedPaymentOption.flowEntities.map((entity, index) => (
                                            <div 
                                                key={index}
                                                className="flow-entity"
                                                style={{
                                                    left: entity.x - 50,
                                                    top: entity.y - 50,
                                                    backgroundColor: entity.color
                                                }}
                                            >
                                                {entity.name}
                                            </div>
                                        ))}
                                        
                                        {selectedPaymentOption.flows.map((flow, index) => {
                                            const fromEntity = selectedPaymentOption.flowEntities[flow.from];
                                            const toEntity = selectedPaymentOption.flowEntities[flow.to];
                                            const { startX, startY, angle, length, arrowX, arrowY } = calculateLineProperties(fromEntity, toEntity);
                                            
                                            return (
                                                <React.Fragment key={index}>
                                                    <div 
                                                        className={`flow-line ${flow.isData ? 'data-line' : ''}`}
                                                        style={{
                                                            left: startX,
                                                            top: startY,
                                                            width: length,
                                                            transform: `rotate(${angle}deg)`
                                                        }}
                                                    ></div>
                                                    <div 
                                                        className={`flow-arrow ${flow.isData ? 'data-arrow' : ''}`}
                                                        style={{
                                                            left: arrowX,
                                                            top: arrowY,
                                                            transform: `translate(-50%, -50%) rotate(${angle}deg)`
                                                        }}
                                                    ></div>
                                                </React.Fragment>
                                            );
                                        })}
                                    </div>
                                    <p><span style={{color: 'black'}}>Black lines:</span> Money flow | <span style={{color: '#E91E63'}}>Pink lines:</span> Data flow</p>
                                </div>
                                
                                <div className="case-studies">
                                    <h4>Real-World Implications</h4>
                                    {selectedPaymentOption.caseStudies.map((study, index) => (
                                        <div key={index} className="case-study">
                                            <h5>{study.title}</h5>
                                            <p>{study.description}</p>
                                        </div>
                                    ))}
                                </div>
                            </div>
                        )}
                    </div>
                    
                    <div className="lesson-container">
                        <h2>Key Insights</h2>
                        <p>Traditional financial systems were built with surveillance as a feature, not a bug. Know-Your-Customer (KYC) and Anti-Money Laundering (AML) regulations require financial institutions to collect and share extensive personal data.</p>
                        <p>Mobile payment apps often collect even more data than traditional banks, including social connections, locations, and spending patterns, which are then analyzed or sold to third parties.</p>
                        <p>Bitcoin offers a fundamentally different approach: while the blockchain is public, users can maintain varying degrees of privacy depending on their usage practices. Self-custody and proper wallet hygiene can significantly enhance privacy.</p>
                        <p>Financial privacy isn't just about hiding transactions - it's about preventing discrimination, protecting against theft, and preserving freedom from financial censorship.</p>
                    </div>
                </div>
            );
        };
        
        ReactDOM.render(<PaymentPrivacySimulator />, document.getElementById('root'));
    </script>
</body>
</html>